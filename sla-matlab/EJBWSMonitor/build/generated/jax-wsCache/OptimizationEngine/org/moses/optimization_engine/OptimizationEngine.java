
package org.moses.optimization_engine;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.3-hudson-757-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebService(name = "OptimizationEngine", targetNamespace = "http://optimization_engine.moses.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OptimizationEngine {


    /**
     * 
     * @param rate
     * @param processName
     * @param processClass
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForSLACreation", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForSLACreation")
    @ResponseWrapper(localName = "calculateProcessSolutionForSLACreationResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForSLACreationResponse")
    public Boolean calculateProcessSolutionForSLACreation(
        @WebParam(name = "processName", targetNamespace = "")
        String processName,
        @WebParam(name = "processClass", targetNamespace = "")
        String processClass,
        @WebParam(name = "rate", targetNamespace = "")
        Double rate)
        throws Exception_Exception
    ;

    /**
     * 
     * @param rate
     * @param processName
     * @param processClass
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForSLADeletion", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForSLADeletion")
    @ResponseWrapper(localName = "calculateProcessSolutionForSLADeletionResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForSLADeletionResponse")
    public Boolean calculateProcessSolutionForSLADeletion(
        @WebParam(name = "processName", targetNamespace = "")
        String processName,
        @WebParam(name = "processClass", targetNamespace = "")
        String processClass,
        @WebParam(name = "rate", targetNamespace = "")
        Double rate)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForServiceChange", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForServiceChange")
    @ResponseWrapper(localName = "calculateProcessSolutionForServiceChangeResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForServiceChangeResponse")
    public Boolean calculateProcessSolutionForServiceChange(
        @WebParam(name = "processName", targetNamespace = "")
        String processName)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForQoSChange", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForQoSChange")
    @ResponseWrapper(localName = "calculateProcessSolutionForQoSChangeResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForQoSChangeResponse")
    public Boolean calculateProcessSolutionForQoSChange(
        @WebParam(name = "processName", targetNamespace = "")
        String processName)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForProcessCreation", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessCreation")
    @ResponseWrapper(localName = "calculateProcessSolutionForProcessCreationResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessCreationResponse")
    public Boolean calculateProcessSolutionForProcessCreation(
        @WebParam(name = "processName", targetNamespace = "")
        String processName)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @param processClass
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForProcessRequest", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessRequest")
    @ResponseWrapper(localName = "calculateProcessSolutionForProcessRequestResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessRequestResponse")
    public String calculateProcessSolutionForProcessRequest(
        @WebParam(name = "processName", targetNamespace = "")
        String processName,
        @WebParam(name = "processClass", targetNamespace = "")
        String processClass)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @param processClass
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calculateProcessSolutionForProcessRequestLoadAware", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessRequestLoadAware")
    @ResponseWrapper(localName = "calculateProcessSolutionForProcessRequestLoadAwareResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.CalculateProcessSolutionForProcessRequestLoadAwareResponse")
    public String calculateProcessSolutionForProcessRequestLoadAware(
        @WebParam(name = "processName", targetNamespace = "")
        String processName,
        @WebParam(name = "processClass", targetNamespace = "")
        String processClass)
        throws Exception_Exception
    ;

    /**
     * 
     * @param processName
     * @param processClass
     * @return
     *     returns java.lang.Boolean
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existProcessSolution", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.ExistProcessSolution")
    @ResponseWrapper(localName = "existProcessSolutionResponse", targetNamespace = "http://optimization_engine.moses.org/", className = "org.moses.optimization_engine.ExistProcessSolutionResponse")
    public Boolean existProcessSolution(
        @WebParam(name = "processName", targetNamespace = "")
        String processName,
        @WebParam(name = "processClass", targetNamespace = "")
        String processClass)
        throws Exception_Exception
    ;

}
